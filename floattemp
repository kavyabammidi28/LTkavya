#include <WiFiClient.h>
#include <ThingSpeak.h>
// ThingSpeak settings
const char *ssid = "0ppo";
const char *password = "11122251";
const char *apiKey = "JDW0NCIMBM7P87IA";
unsigned long channelID =  2576458; // Replace with your ThingSpeak channel ID
// Initialize the BME680 sensor
Adafruit_BME680 bme; 
// WiFi client object
WiFiClient client;
void setup() {
  Serial.begin(115200);
  delay(100);
    Serial.println("BME680 test");
  if (!bme.begin()) {
    Serial.println("Could not find a valid BME680 sensor, check wiring!");
    while (1); // Stop if sensor not found
  }
  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.print("Got IP: ");
  Serial.println(WiFi.localIP());
}
void loop() {
  // Read sensor data
  float temperature = bme.readTemperature();
  float humidity = bme.readHumidity();
  float pressure = bme.readPressure() / 100.0F;
  // Print sensor data to Serial Monitor
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println(" Â°C");
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.println(" %");
  Serial.print("Pressure: ");
  Serial.print(pressure);
  Serial.println(" hPa");
  // Send sensor data to ThingSpeak
  ThingSpeak.begin(client); // Initialize ThingSpeak client
  // Write sensor data to ThingSpeak fields
  ThingSpeak.setField(1, temperature);
  ThingSpeak.setField(2, humidity);
  ThingSpeak.setField(3, pressure);
  // Send data to ThingSpeak channel
  int writeSuccess = ThingSpeak.writeFields(channelID, apiKey);
  if (writeSuccess == 200) {
    Serial.println("ThingSpeak update successful!");
  } else {
    Serial.print("Error updating ThingSpeak. HTTP error code: ");
    Serial.println(writeSuccess);
  }
  // Wait for 15 seconds before sending next update (ThingSpeak limit: 15 sec minimum interval)
  delay(15000);
}
